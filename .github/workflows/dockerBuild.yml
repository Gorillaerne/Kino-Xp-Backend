name: Deploy Backend to Docker Hub

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    outputs:
      image-tag: docker.io/${{ secrets.DOCKER_USERNAME }}/kino-backend:latest

    steps:
      - name: 🛠️ Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Make Maven Wrapper executable
        run: chmod +x ./mvnw

      - name: 🧰 Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: ⚙️ Build Spring Boot JAR
        run: |
          ./mvnw clean package -DskipTests

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: 🏗️ Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            docker.io/${{ secrets.DOCKER_USERNAME }}/kino-backend:latest
            docker.io/${{ secrets.DOCKER_USERNAME }}/kino-backend:${{ github.run_number }}

      - name: ✅ Build complete
        run: echo "🎉 Successfully built and pushed Docker image!"

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push   # ← This ensures it runs after build-and-push
    steps:
      - name: 🚀 Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            cd kino
            docker compose pull
            docker compose up -d
